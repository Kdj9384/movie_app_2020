{"version":3,"sources":["Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","id","rating","runtime","year","title","summary","coverImage","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","test","getMovies","a","axios","get","movie","data","setState","console","log","this","medium_cover_image","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RA+CeA,MA1Cf,YASG,EARDC,GAQC,EAPDC,OAOC,EANDC,QAME,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,MACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,WACAC,EACC,EADDA,OAEA,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAYI,IAAKN,EAAOA,MAAOA,IACzC,sBAAKI,UAAU,cAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+BJ,IAC/B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACGD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBL,UAAU,eAA1B,SACGI,GADMC,QAKb,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,iBCyCOC,G,kNA5DbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,GACRC,KAAM,I,EAGRC,U,sBAAY,8BAAAC,EAAA,sEACWC,IAAMC,IACzB,0DAFQ,OACJL,EADI,OAKJM,EAAQN,EAAOO,KAAKA,KAAKP,OAE/B,EAAKQ,SAAS,CAAER,OAAQM,EAAOP,WAAW,IAC1CU,QAAQC,IAAIJ,GARF,2C,kEAcVK,KAAKT,c,+BAIL,IAAMH,EAAYY,KAAKb,MAAMC,UAIrBC,EAAWW,KAAKb,MAAhBE,OAER,OACE,yBAASV,UAAU,YAAnB,SACGS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAACa,GACX,OACE,cAAC,EAAD,CAEExB,GAAIwB,EAAMxB,GACVC,OAAQuB,EAAMvB,OACdC,QAASsB,EAAMtB,QACfC,KAAMqB,EAAMrB,KACZC,MAAOoB,EAAMpB,MACbC,QAASmB,EAAMnB,QACfC,WAAYkB,EAAMM,mBAClBvB,OAAQiB,EAAMjB,QARTiB,EAAMxB,e,GA3CX+B,IAAMC,YCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAKFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.a1672f78.chunk.js","sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\n\nimport \"./Movie.css\";\n\nfunction Movie({\n  id,\n  rating,\n  runtime,\n  year,\n  title,\n  summary,\n  coverImage,\n  genres,\n}) {\n  return (\n    <div className=\"movie\">\n      <img src={coverImage} alt={title} title={title} />\n      <div className=\"movie__data\">\n        <h3 className=\"movie__titile\">{title}</h3>\n        <h5 className=\"movie__year\">{year}</h5>\n        <ul className=\"movie__genres\">\n          {genres.map((genre, index) => (\n            <li key={index} className=\"genres_genre\">\n              {genre}\n            </li>\n          ))}\n        </ul>\n        <p className=\"movie__summary\">{summary.slice(0, 300)} ...</p>\n      </div>\n    </div>\n  );\n}\n\nMovie.propTypes = {\n  id: propTypes.number.isRequired,\n  rating: propTypes.number.isRequired,\n  runtime: propTypes.number.isRequired,\n  year: propTypes.number.isRequired,\n\n  title: propTypes.string.isRequired,\n  summary: propTypes.string.isRequired,\n  coverImage: propTypes.string.isRequired,\n\n  genres: propTypes.arrayOf(propTypes.string).isRequired,\n};\n\nexport default Movie;\n","import React from \"react\";\nimport axios from \"axios\";\n\nimport Movie from \"./Movie\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  // parent\n  state = {\n    isLoading: true,\n    movies: [],\n    test: [],\n  };\n\n  getMovies = async () => {\n    const movies = await axios.get(\n      \"https://yts-proxy.nomadcoders1.now.sh/list_movies.json\"\n    );\n\n    const movie = movies.data.data.movies; // movie -> array 형태임\n\n    this.setState({ movies: movie, isLoading: false });\n    console.log(movie);\n  };\n  componentDidMount() {\n    // 데이터를 받아오는 방법\n    // 1. fetch()\n    // 2. axios : fetch 위에서 동작하는 api\n    this.getMovies();\n  }\n\n  render() {\n    const isLoading = this.state.isLoading;\n    // const {isLoading} = this.state; // what different??\n\n    // const movies = this.state.movies;\n    const { movies } = this.state;\n\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => {\n              return (\n                <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  rating={movie.rating}\n                  runtime={movie.runtime}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  coverImage={movie.medium_cover_image}\n                  genres={movie.genres}\n                />\n              );\n            })}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {/* component returns HTML\n        컴포넌트는 HTML를 반환하는 함수이다!!\n    */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}